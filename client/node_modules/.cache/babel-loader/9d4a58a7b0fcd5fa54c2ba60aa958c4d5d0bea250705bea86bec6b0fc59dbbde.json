{"ast":null,"code":"var _jsxFileName = \"M:\\\\3-1\\\\React\\\\chat-app\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    localStorage.setItem('userName', userName);\n    //sends the username and socket ID to the Node.js server\n    socket.emit('newUser', {\n      userName,\n      socketID: socket.id\n    });\n    navigate('/chat');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"home__container\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"home__header\",\n      children: \"Sign in to Open Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      minLength: 6,\n      name: \"username\",\n      id: \"username\",\n      className: \"username__input\",\n      value: userName,\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"home__cta\",\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"lyvHzvbsIG8CmQBgF39bVRFgXsI=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nlet users = [];\nsocketIO.on('connection', socket => {\n  console.log(`âš¡: ${socket.id} user just connected!`);\n  socket.on('message', data => {\n    socketIO.emit('messageResponse', data);\n  });\n\n  //Listens when a new user joins the server\n  socket.on('newUser', data => {\n    //Adds the new user to the list of users\n    users.push(data);\n    // console.log(users);\n    //Sends the list of users to the client\n    socketIO.emit('newUserResponse', users);\n  });\n  socket.on('disconnect', () => {\n    console.log('ðŸ”¥: A user disconnected');\n    //Updates the list of users when a user disconnects from the server\n    users = users.filter(user => user.socketID !== socket.id);\n    // console.log(users);\n    //Sends the list of users to the client\n    socketIO.emit('newUserResponse', users);\n    socket.disconnect();\n  });\n});\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","navigate","userName","setUserName","handleSubmit","e","preventDefault","localStorage","setItem","socket","emit","socketID","id","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","minLength","name","value","onChange","target","_c","users","socketIO","on","console","log","data","push","filter","user","disconnect","$RefreshReg$"],"sources":["M:/3-1/React/chat-app/client/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [userName, setUserName] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem('userName', userName);\r\n    //sends the username and socket ID to the Node.js server\r\n    socket.emit('newUser', { userName, socketID: socket.id });\r\n    navigate('/chat');\r\n  };\r\n  return (\r\n    <form className=\"home__container\" onSubmit={handleSubmit}>\r\n      <h2 className=\"home__header\">Sign in to Open Chat</h2>\r\n      <label htmlFor=\"username\">Username</label>\r\n      <input\r\n        type=\"text\"\r\n        minLength={6}\r\n        name=\"username\"\r\n        id=\"username\"\r\n        className=\"username__input\"\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n      />\r\n      <button className=\"home__cta\">SIGN IN</button>\r\n    </form>\r\n  );\r\n};\r\nlet users = [];\r\n\r\nsocketIO.on('connection', (socket) => {\r\n  console.log(`âš¡: ${socket.id} user just connected!`);\r\n  socket.on('message', (data) => {\r\n    socketIO.emit('messageResponse', data);\r\n  });\r\n\r\n  //Listens when a new user joins the server\r\n  socket.on('newUser', (data) => {\r\n    //Adds the new user to the list of users\r\n    users.push(data);\r\n    // console.log(users);\r\n    //Sends the list of users to the client\r\n    socketIO.emit('newUserResponse', users);\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    console.log('ðŸ”¥: A user disconnected');\r\n    //Updates the list of users when a user disconnects from the server\r\n    users = users.filter((user) => user.socketID !== socket.id);\r\n    // console.log(users);\r\n    //Sends the list of users to the client\r\n    socketIO.emit('newUserResponse', users);\r\n    socket.disconnect();\r\n  });\r\n});\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}